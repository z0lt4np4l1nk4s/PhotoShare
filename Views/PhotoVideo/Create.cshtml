@model PhotoShare.Models.PhotoVideo

@{
    ViewBag.Title = "Create";
}

<h2>Dodaj</h2>


@using (Html.BeginForm("Create", "PhotoVideo", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        <div class="form-group">
            @Html.LabelFor(model => model.Path, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" name="PhotoVideoFile" required="required" id="fileInput" />
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Dodaj Tag", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="text" name="tag" />
            </div>
        </div>
        @if (Session["Tag"] != null)
        {
            <div class="form-group">
                @Html.Label("Odaberi Tag", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.ListBox("tags", Session["Tag"] as List<SelectListItem>, new { multiple = "multiple", @class = "listbox", size = 8 })
                </div>
            </div>
        }
    </div>
}

<div id="progressbar_container" style="width: 100%; height: 30px; position: relative; background-color: grey; display: none">
    <div id="progressbar" style="width: 0%; height: 100%; position: absolute; background-color: green"></div>
    <span id="progressbar_label" style="position: absolute; left: 35%; top: 20%">Uploading...</span>
</div>


<div class="form-group">
    <div class="col-md-offset-2 col-md-10">
        <a href="#" id="btnUpload" class="btn btn-primary">Objavi</a>
    </div>
</div>




<div>
    @Html.ActionLink("Povratak", "Index", "Home")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
    $(document).ready(function () {
        $('#btnUpload').click(function () {
            UploadFile($('#fileInput')[0].files);
        }
        )
    });

    @*function UploadFinished() {
        var FD = FormData();
        $.ajax({
            type: "POST",
            url: '@Url.Action("Create", "PhotoVideo")',
            contentType: false,
            processData: false,
            data: FD
        });
    }*@

    function UploadFileChunk(Chunk, FileName) {
        var FD = new FormData();
        FD.append('PhotoVideoFile', Chunk, FileName);
        $.ajax({
            type: "POST",
            url: 'https://localhost:44367/PhotoVideo/UploadFile/',
            contentType: false,
            processData: false,
            data: FD
        });
    }

    function UploadFile(TargetFile) {
        // create array to store the buffer chunks
        var FileChunk = [];
        // the file object itself that we will work with
        var file = TargetFile[0];
        // set up other initial vars
        var MaxFileSizeMB = 1;
        var BufferChunkSize = MaxFileSizeMB * (1024 * 1024);
        var ReadBuffer_Size = 1024;
        var FileStreamPos = 0;
        // set the initial chunk length
        var EndPos = BufferChunkSize;
        var Size = file.size;

        // add to the FileChunk array until we get to the end of the file
        while (FileStreamPos < Size) {
            // "slice" the file from the starting position/offset, to  the required length
            FileChunk.push(file.slice(FileStreamPos, EndPos));
            FileStreamPos = EndPos; // jump by the amount read
            EndPos = FileStreamPos + BufferChunkSize; // set next chunk length
        }
        // get total number of "files" we will be sending
        var TotalParts = FileChunk.length;
        var PartCount = 0;
        // loop through, pulling the first item from the array each time and sending it
        while (chunk = FileChunk.shift()) {
            PartCount++;
            // file name convention
            var FilePartName = file.name + ".part_" + PartCount + "." + TotalParts;
            // send the file
            UploadFileChunk(chunk, FilePartName);
            alert('Uploading...');
        }

        //UploadFinished();
    }
    </script>
}
